server.port=9527
spring.application.name=springcloud2020-gateway


eureka.instance.hostname=localhost
#false:表示自己就是注册中心，不用注册自己,true:自己提供服务（如果是server表示自己也是注册中心）
eureka.client.registerWithEureka=true
#false：表示自己就是注册中心，不用去注册中心获取其他服务的地址，true:需要去注册中心获取其他服务的地址
eureka.client.fetchRegistry=true
#显示服务id名称
eureka.instance.instance-id=gateway
#显示服务ip地址
eureka.instance.prefer-ip-address=true
eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@eureka001.com:7001/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@eureka002.com:7002/eureka/

spring.security.user.name=cuixingzheng
spring.security.user.password=123456

#打开所有actuator功能，不配置2.0以后默认只打开info、health
#management.endpoints.web.exposure.include=*
#显示健康具体信息  默认不会显示详细信息
#management.endpoint.health.show-details=always
#显示HTTP跟踪信息 2.0后需要手动打开
#management.endpoint.httptrace.enabled=true
#启动feign对hystrix支持
#feign.hystrix.enabled=true
#设置feign服务接口访问时长（底层使用ribbon）
#ribbon.ReadTimeout=5000
#ribbon.ConnectTimeout=5000

#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=120000
#hystrix.command.MqSendFeign#sendMq(MqMessage).execution.isolation.thread.timeoutInMilliseconds=1000

#配置gateway
#gateway使用注册中心服务 true：打开 false：关闭
spring.cloud.gateway.discovery.locator.enabled=true
#gateway路由id，需要保持唯一
spring.cloud.gateway.routes[0].id=order-server001
#gateway路由ip或服务地址
spring.cloud.gateway.routes[0].uri=lb://SPRINGCLOUD2020-PAYMENT
#gateway断言地址规则：符合下面地址继续向下走其他断言规则
spring.cloud.gateway.routes[0].predicates[0]=Path=/payment/createPayment
#gateway断言时间规则：表示在配置时间之后可以访问
#spring.cloud.gateway.routes[0].predicates[1]=After=2020-10-15T11:38:29.297+08:00[Asia/Shanghai]
#gateway断言Cookie规则：表示需要增加cookie参数
#spring.cloud.gateway.routes[0].predicates[2]=Cookie=username,cxz
#getway断言Header规则：要求Header中X-Request-Id值为整数（\\d+ 为正数正则表达式）
#spring.cloud.gateway.routes[0].predicates[3]=Header=X-Request-Id,\\d+
#getway过滤器在请求头添加X-Request-red=blue001
spring.cloud.gateway.routes[0].filters[0]=AddRequestHeader=X-Request-red,blue001
#getway过滤器在请求参数添加red=blue002
spring.cloud.gateway.routes[0].filters[1]=AddRequestParameter=red, blue002
#getway过滤器在响应头中添加X-Response-Foo=Bar
spring.cloud.gateway.routes[0].filters[2]=AddResponseHeader=X-Response-Foo,Bar


